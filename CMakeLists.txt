cmake_minimum_required(VERSION 2.8)

set_property(GLOBAL PROPERTY USE_FOLDERS ON)
set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE)
set (CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake/)

# Directories
set(BASE_DIR ${CMAKE_CURRENT_LIST_DIR})
set(DEPENDENCIES_DIR ${CMAKE_CURRENT_LIST_DIR}/examples/dependencies/)
set(BMDL_INCLUDE ${CMAKE_CURRENT_LIST_DIR}/source/)

# Set output directories
set(ARCHIVE_OUTPUT_DIR ${CMAKE_BINARY_DIR}/lib)
set(RUNTIME_OUTPUT_DIR ${CMAKE_BINARY_DIR}/bin)

set( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${RUNTIME_OUTPUT_DIR} )
set( CMAKE_LIBRARY_OUTPUT_DIRECTORY ${ARCHIVE_OUTPUT_DIR} )
set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${ARCHIVE_OUTPUT_DIR} )

foreach( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )
    string( TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG )
    set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${RUNTIME_OUTPUT_DIR} )
    set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${ARCHIVE_OUTPUT_DIR} )
    set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${ARCHIVE_OUTPUT_DIR} )
	message("CONFIG_SET = " ${OUTPUTCONFIG})
endforeach( OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES )

# Load modules
set (CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR})

# include_directories(${DEPENDENCIES_INCLUDE_DIR})

# Find OpenGL
find_package(OpenGL REQUIRED)
include_directories( ${OPENGL_INCLUDE_DIRS} )

# Create Solution
project(BasicModel CXX C)

# Add bmdl source folder
add_subdirectory(source)

# Add all examples
add_subdirectory(examples)

